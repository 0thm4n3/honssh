#
# HonSSH configuration file (honssh.cfg)
#

#----------------------------------------------#
#                 GENERAL SETUP                #
#----------------------------------------------#

#-----------------------#
#       HONEYPOT        #
#-----------------------#
[honeypot]

# When logging to the database, this name will be used. 
# If blank, ssh_addr will be used instead.
#
# input: Text
# required: NO
sensor_name = 

# IP addresses to listen for incoming SSH connections.
#
# input: IP Address
# required: YES
ssh_addr = 

# Port to listen for incoming SSH connections.
#
# input: Number
# required: YES
# default: 2222
ssh_port = 2222

# IP addresses to send outgoing SSH connections.
#
# input: IP Address
# required: YES
client_addr = 

# IP addresses of the honeypot.
#
# input: IP Address
# required: YES
honey_addr = 

# Public and private SSH key files. 
#
# input: Text
# required: YES
# default: id_rsa.pub
# default: id_rsa
public_key = id_rsa.pub
private_key = id_rsa


#-----------------------#
#   OUTPUT DIRECTORIES  #
#-----------------------#
[folders]

# Directory where log files will be saved in.
#
# input: Text
# required: YES
# default: logs
log_path = logs

# Directory where session files will be saved in.
#
# input: Text
# required: YES
# default: sessions
session_path = sessions

#-----------------------#
#  ADVANCED NETWORKING  #
#-----------------------#
[advNet]

# To enable this HonSSH must be ran as root or an account allowed to run 
# iptables and ip link/addr commands.
#
# With this disabled, the honeypot will always see connections coming from
# honey_addr. With this enabled, connections will look as if the connections
# are coming from the attacker.
# See the Wiki page for more details.
# https://code.google.com/p/honssh/wiki/AdvancedNetworking
#
# input: true/false
# required: YES
# default: false
enabled = false

#-----------------------#
#    LIVE INTERACTION   #
#-----------------------#
[interact]

# Session management interface.
#
# This is a telnet based service that can be used to interact with active
# sessions. Disabled by default.
#
# input: true/false
# required: YES
# default: false
enabled = false

# Interface to create the interaction on - 0.0.0.0 for all.
#
# input: IP Address
# required: if interact_enabled = true
# default: 127.0.0.1
interface = 127.0.0.1

# Port to create the interaction on
#
# input: Number
# required: if interact_enabled = true
# default: 5123
port = 5123

#-----------------------#
#   PASSWORD SPOOFING   #
#-----------------------#
[spoof]

# Enabling this will allow any password attempt to succeed. 
# The attempted password will be replaces with the 'pass' password
#
# input: true/false
# required: YES
# default: false
enabled = false

# Real password of the honeypot
#
# input: Test
# required: if enabled = true
pass = 
# This value changes how often HonSSH spoofs the password, 
# e.g. 1 = 1/1 = 100%, 2 = 1/2 = 50%, 10 = 1/10 = 10%
#
# input: Number
# required: if enabled = true
# default: 10
chance = 10

#----------------------------------------------#
#              LOGGING AND OUTPUTS             #
#----------------------------------------------#

#-----------------------#
#      TEXT LOGGING     #
#-----------------------#
[txtlog]

# All activity will be logged to text files
# A log of entry attempts will be kept in log_path/
# A log of session activity will be kept in session_path/
#
# input: true/false
# required: YES
# default: true
enabled = true

#-----------------------#
#      MYSQL LOGGING    #
#-----------------------#
[database_mysql]

# All activity will be logged to a MYSQL Database
# Database structure for this module is supplied in doc/sql/mysql.sql
#
# input: true/false
# required: yes
# default: false
enabled = false

# IP address of the database
#
# input: IP Address
# required: if enabled = true
# default: localhost
host = localhost

# Port to connect to the database on
#
# input: Number
# required: NO
# default: 3306
port = 3306

# Name of the database
#
# input: Text
# required: if enabled = true
database = 

# Username to authenticate with the database
#
# input: Text
# required: if enabled = true
username = 

# Password to authenticate with the database
#
# input: Text
# required: if enabled = true
password = 

#-----------------------#
#      EMAIL LOGGING    #
#-----------------------#
[email]

# Send an email upon hacker connect
#
# dependency: txtlog MUST be enabled
# input: true/false
# required: YES
# default: false
login = false

# Send an email upon hacker disconnect - Will attach the tty log file
#
# dependency: txtlog MUST be enabled
# input: true/false
# required: YES
# default: false
attack = false

# Your SMTP Host
#
# input: Text
# required: if login or attack = true
host = 

# Your SMTP Port
#
# input: Number
# required: if login or attack = true
port = 

# Use SSL/TLS to connect to the SMTP provider?
#
# input: true/false
# required: if login or attack = true
# default: true
use_tls = true

# Your SMTP login username
#
# input: Text
# required: NO
username = 

# Your SMTP login password
#
# input: Text
# required: NO
password = 

# The address the email is sent from
#
# input: Email Address
# required: if login or attack = true
from = 

# The address(es) the email is sent to
#
# input: Email Addresses in a comma seperated list without spaces
# required: if login or attack = true
to = 

#-----------------------#
#    FILE DOWNLOADING   #
#-----------------------#
[download]

# File Download
#
# By setting this to true - 
# HonSSH wil attempt to download all wget and scp files to a local store.
#
# input: true/false
# required: YES
# default: false
enabled = false

#-----------------------#
#     PACKET LOGGING    #
#-----------------------#
[packets]

# Log all SSH Packets to text file (adv.log)
#
# input: true/false
# required: YES
# default: false
enabled = false

#-----------------------#
#   APPLICATION HOOKS   #
#-----------------------#
[app_hooks]
# If you want any other application hooks or arguments passing, raise an issue
# on the HonSSH code page. 

# Calls the script when a connection is made with the following arguments
# ./script CONNECTION_MADE DATETIME IP PORT
#
# input: path of script to run
# required: NO
connection_made = 

# Calls the script when a connection is lost with the following arguments
# ./script CONNECTION_LOST DATETIME IP
#
# input: path of script to run
# required: NO
connection_lost = 

# Calls the script when a login is successful with the following arguments
# ./script LOGIN_SUCCESSFUL DATETIME IP USERNAME PASSWORD
#
# input: path of script to run
# required: NO
login_successful = 

# Calls the script when a login has failed with the following arguments
# ./script LOGIN_FAILED DATETIME IP USERNAME PASSWORD
#
# input: path of script to run
# required: NO
login_failed = 

# Calls the script when a command is entered with the following arguments
# ./script COMMAND_ENTERED DATETIME IP COMMAND
#
# input: path of script to run
# required: NO
command_entered = 

# Calls the script when a file download is started with the following arguments
# ./script DOWNLOAD_STARTED DATETIME IP LINK FILE_PATH
#
# input: path of script to run
# required: NO
download_started = 

# Calls the script when a file download is finished with the following arguments
# ./script DOWNLOAD_FININSHED DATETIME IP LINK FILE_PATH
#
# input: path of script to run
# required: NO
download_finished = 